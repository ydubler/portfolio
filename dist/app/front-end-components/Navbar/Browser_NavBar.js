"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _react=_interopRequireDefault(require("react"));var _aphrodite=require("aphrodite");var _LinearGradient=_interopRequireDefault(require("./components/LinearGradient"));var _OptionSVG=_interopRequireDefault(require("./components/OptionSVG"));var _MinifiedOption=_interopRequireDefault(require("./components/MinifiedOption"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj};}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&Symbol.iterator in Object(iter))return Array.from(iter);}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==="object"||typeof call==="function")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}// App Function Component
var Browser_NavBar=/*#__PURE__*/function(_React$Component){_inherits(Browser_NavBar,_React$Component);var _super=_createSuper(Browser_NavBar);// GENERAL NOTES
// The this.props.optionsList[i] is modified in this component to contain one more properties:
// 1) the "compactWidth" property, accessed like this: this.props.optionsList[0].compactWidth
function Browser_NavBar(props){var _this;_classCallCheck(this,Browser_NavBar);_this=_super.call(this,props);// This gets the width of a string -- not yet used
String.prototype.width=function(font){var f=font||"20px Optima",o=$("<div></div>").text(this).css({position:"absolute","float":"left","white-space":"nowrap",visibility:"hidden",font:f}).appendTo($("body")),w=o.width();o.remove();return w;};// STATE NOTES
_this.state={_isMounted:false,orientation:"landscape",colorScheme:navBarColorsRedSchema,c_optionFontSizePixelConstant:25/2,// modify
c_widthPerCharApproxLowerCase:0,c_widthPerCharApproxUpperCase:0,c_optionWidthBufferConstant:20,// modify
c_optionRotationAngle:2,// modify
c_optionScaleWithdrawn:0.98,// modify
c_svgOverlapConstant:5,// modify
c_dropDownTextBuffer:3,// modify (pixels)
longestStringWidthUpperCase:0,longestStringWidthLowerCase:0,longestStringHeight:0,windowInnerWidth:0,windowExtraWidth:0,screenHeight:0,gradientWidth:0,gradientHeight:0,optionWidthIdeal:0,optionHeightIdeal:0,optionVerticalOffsetIdeal:0,optionHorizontalShiftIdeal:0,optionsTotalWidthIdeal:0,optionsTotalWidthCompact:0,svgHeight:0,svgHorizontalOverlapIdeal:0,dropdownBarHeight:0,// Minified Menu
minifiedScaleFactor:1.0,minifiedOptionGapWidth:0,minifiedOptionsTotalWidthIdeal:0,minifiedOptionsCurrentWidthCompact:0,minifiedOptionsTotalWidthCompact:0};// Bindings
_this.onResize=_this.onResize.bind(_assertThisInitialized(_this));_this.onResizeWrapper=_this.onResizeWrapper.bind(_assertThisInitialized(_this));_this.addCompactPropertiesToOptionsList=_this.addCompactPropertiesToOptionsList.bind(_assertThisInitialized(_this));_this.getSVGHorizontalShiftCompact=_this.getSVGHorizontalShiftCompact.bind(_assertThisInitialized(_this));_this.getOptionsTotalWidthCompact=_this.getOptionsTotalWidthCompact.bind(_assertThisInitialized(_this));_this.determineWidestWidthOfOptionsList=_this.determineWidestWidthOfOptionsList.bind(_assertThisInitialized(_this));_this.getSumOfOptionTextDivWidths=_this.getSumOfOptionTextDivWidths.bind(_assertThisInitialized(_this));// this.getMinifiedIdealOptionTextStartX = this.getMinifiedIdealOptionTextStartX.bind(
//   this
// );
// Resize timer to make the window resize after a delay (increases performance)
_this.resizeTimer;// Aphrodite Stylesheet
_this.styles=_aphrodite.StyleSheet.create({optionWithdrawn:{transformOrigin:"top right",transform:"rotate("+_this.state.c_optionRotationAngle+"deg) scale("+_this.state.c_optionScaleWithdrawn+")"},optionExposed:{transformOrigin:"top right",transform:"rotate(0deg) scale(1.0)"}});return _this;}_createClass(Browser_NavBar,[{key:"componentDidUpdate",value:function componentDidUpdate(){}},{key:"componentDidMount",value:function componentDidMount(){var numberOptions=this.props.optionsList.length;var longestStringLength=this.props.longestStringLength;var longestStringDivLowerCase=document.getElementById("navbarStringDimensionsLowerCase");var longestStringHeight=longestStringDivLowerCase.clientHeight;var longestStringWidthLowerCase=longestStringDivLowerCase.clientWidth;var c_widthPerCharApproxLowerCase=longestStringWidthLowerCase/longestStringLength;var longestStringDivUpperCase=document.getElementById("navbarStringDimensionsUpperCase");var longestStringWidthUpperCase=longestStringDivUpperCase.clientWidth;var c_widthPerCharApproxUpperCase=longestStringWidthUpperCase/longestStringLength;// console.log("WIDTH PER CHARACTER : " + c_widthPerCharApproxUpperCase);
var windowInnerWidth=window.innerWidth;var screenHeight=screen.height;var c_optionWidthBufferConstant=this.state.c_optionWidthBufferConstant;var c_optionRotationAngle=this.state.c_optionRotationAngle;var c_optionScaleWithdrawn=this.state.c_optionScaleWithdrawn;var c_svgOverlapConstant=this.state.c_svgOverlapConstant;//console.log("longestStringWidth = " + this.props.longestStringWidth);
var gradientHeight=longestStringHeight*2;var optionWidthIdeal=this.determineWidestWidthOfOptionsList()+c_optionWidthBufferConstant;//console.log("option width ideal : " + optionWidthIdeal);
var optionHeightIdeal=longestStringHeight*2;var optionVerticalOffsetIdeal=Math.sin(c_optionRotationAngle/360*2*Math.PI)*optionWidthIdeal*c_optionScaleWithdrawn+1;var optionHorizontalShiftIdeal=optionWidthIdeal-Math.cos(c_optionRotationAngle/360*2*Math.PI)*optionWidthIdeal*c_optionScaleWithdrawn;var svgHorizontalOverlapIdeal=optionHorizontalShiftIdeal+c_svgOverlapConstant;var optionsTotalWidthIdeal=numberOptions*optionWidthIdeal-(numberOptions-1)*svgHorizontalOverlapIdeal;// console.log(
//   " CDM: optionsTotalWidthIdeal = " +
//     optionsTotalWidthIdeal +
//     " , " +
//     numberOptions +
//     " , " +
//     optionWidthIdeal +
//     " , " +
//     svgHorizontalOverlapIdeal
// );
// Add compact properties to optionsList
// const optionsTotalWidthCompact = this.addCompactPropertiesToOptionsList(
//   c_widthPerCharApproxUpperCase,
//   c_widthPerCharApproxLowerCase
// );
var optionsTotalWidthCompact=this.addCompactPropertiesToOptionsList();// MINIFIED MENU
// The gap is the space between Options (including a buffer gap at the beginning of the set and at the end )
var minifiedOptionGapWidth=document.getElementById("navbarStringWidth_MinifiedGap").clientWidth;// This measurement is using fontSize 25 but it should be returning a value of fontSize 20,
// so, the scaling factor of 20/25 = 0.8 is being used
var minifiedOptionsTotalWidthIdeal=this.getSumOfOptionTextDivWidths()*0.8+(this.props.optionsList.length+1)*minifiedOptionGapWidth;// This corresponds with a font size of 15 (the minified menu will be scaling down in font size continuously)
// The 0.75 scaling factor comes from 15/20 (fontSize ratio)
var minifiedOptionsTotalWidthCompact=minifiedOptionsTotalWidthIdeal*0.75;// Scale factor comes into play when scaling down text
var minifiedScaleFactor=windowInnerWidth>=minifiedOptionsTotalWidthIdeal?1.0:windowInnerWidth>=minifiedOptionsTotalWidthCompact?1.0-(minifiedOptionsTotalWidthIdeal-windowInnerWidth)/(minifiedOptionsTotalWidthIdeal-minifiedOptionsTotalWidthCompact)*(1-15/20):0;var minifiedOptionsCurrentWidthCompact=minifiedOptionsTotalWidthIdeal*minifiedScaleFactor;// Window Extra Width (Tends to be the last thing the be computed)
var windowExtraWidth=windowInnerWidth>=optionsTotalWidthIdeal?windowInnerWidth-optionsTotalWidthIdeal:windowInnerWidth>=optionsTotalWidthCompact?windowInnerWidth-optionsTotalWidthCompact:windowInnerWidth>=minifiedOptionsTotalWidthIdeal?windowInnerWidth-minifiedOptionsTotalWidthIdeal:windowInnerWidth>=minifiedOptionsTotalWidthCompact?windowInnerWidth-minifiedOptionsCurrentWidthCompact:0;// Dropdown Bar Height
var dropdownBarHeight=optionHeightIdeal*0.1;// Set state _isMounted to true
this.setState(function(prevState){return{_isMounted:true,// is mounted
longestStringWidthLowerCase:longestStringWidthLowerCase,longestStringWidthUpperCase:longestStringWidthUpperCase,longestStringHeight:longestStringHeight,c_widthPerCharApproxLowerCase:c_widthPerCharApproxLowerCase,c_widthPerCharApproxUpperCase:c_widthPerCharApproxUpperCase,windowInnerWidth:windowInnerWidth,windowExtraWidth:windowExtraWidth,screenHeight:screenHeight,gradientWidth:windowInnerWidth,gradientHeight:gradientHeight,optionWidthIdeal:optionWidthIdeal,optionHeightIdeal:optionHeightIdeal,optionVerticalOffsetIdeal:optionVerticalOffsetIdeal,optionHorizontalShiftIdeal:optionHorizontalShiftIdeal,svgHorizontalOverlapIdeal:svgHorizontalOverlapIdeal,optionsTotalWidthIdeal:optionsTotalWidthIdeal,optionsTotalWidthCompact:optionsTotalWidthCompact,dropdownBarHeight:dropdownBarHeight,// Minified Options
minifiedScaleFactor:minifiedScaleFactor,minifiedOptionGapWidth:minifiedOptionGapWidth,minifiedOptionsTotalWidthIdeal:minifiedOptionsTotalWidthIdeal,minifiedOptionsTotalWidthCompact:minifiedOptionsTotalWidthCompact};});// Add a window-resize event listener
// window.addEventListener("resize", this.onResizeWrapper);   // use this line to use resize timer (might improve performance)
window.addEventListener("resize",this.onResize);// use this line to not use a resize timer at all
console.log("Component mounted.");}// Wraps resize in a timer so that it only fires the resize event periodically (to increase page smoothness)
},{key:"onResizeWrapper",value:function onResizeWrapper(){var _this2=this;var timeAmount=250;clearTimeout(this.resizeTimer);this.resizeTimer=setTimeout(function(){return _this2.onResize();},timeAmount);}// This updates the window properties of the state
},{key:"onResize",value:function onResize(){var _this3=this;if(this.state._isMounted){// Update the window properties
this.setState(function(prevState){var numberOptions=_this3.props.optionsList.length;var longestStringDivLowerCase=document.getElementById("navbarStringDimensionsLowerCase");var longestStringHeight=longestStringDivLowerCase.clientHeight;var windowInnerWidth=window.innerWidth;var screenHeight=screen.height;var c_optionWidthBufferConstant=prevState.c_optionWidthBufferConstant;var c_optionRotationAngle=prevState.c_optionRotationAngle;var c_optionScaleWithdrawn=prevState.c_optionScaleWithdrawn;var c_svgOverlapConstant=prevState.c_svgOverlapConstant;var gradientHeight=longestStringHeight*2;var optionWidthIdeal=_this3.determineWidestWidthOfOptionsList()+c_optionWidthBufferConstant;var optionHeightIdeal=longestStringHeight*2;var optionVerticalOffsetIdeal=Math.sin(c_optionRotationAngle/360*2*Math.PI)*optionWidthIdeal*c_optionScaleWithdrawn+1;var optionHorizontalShiftIdeal=optionWidthIdeal-Math.cos(c_optionRotationAngle/360*2*Math.PI)*optionWidthIdeal*c_optionScaleWithdrawn;var optionsTotalWidthCompact=_this3.state.optionsTotalWidthCompact;// console.log(
//   "optionHorizontalShiftIdeal = " +
//     optionWidthIdeal +
//     " - " +
//     "Math.cos(" +
//     c_optionRotationAngle +
//     ")*" +
//     optionWidthIdeal +
//     "*" +
//     c_optionScaleWithdrawn
// );
// console.log(
//   "Math.cos(" +
//     this.state.c_optionRotationAngle +
//     ")=" +
//     Math.cos(this.state.c_optionRotationAngle)
// );
var svgHorizontalOverlapIdeal=optionHorizontalShiftIdeal+c_svgOverlapConstant;var optionsTotalWidthIdeal=numberOptions*optionWidthIdeal-(numberOptions-1)*svgHorizontalOverlapIdeal;// MINIFIED MENU
// This measurement is using fontSize 25 but it should be returning a value of fontSize 20,
// so, the scaling factor of 20/25 = 0.8 is being used
var minifiedOptionsTotalWidthIdeal=prevState.minifiedOptionsTotalWidthIdeal;// This corresponds with a font size of 15 (the minified menu will be scaling down in font size continuously)
// The 0.75 scaling factor comes from 15/20 (fontSize ratio)
var minifiedOptionsTotalWidthCompact=minifiedOptionsTotalWidthIdeal*0.75;// Scale factor comes into play when scaling down text
var minifiedScaleFactor=windowInnerWidth>=minifiedOptionsTotalWidthIdeal?1.0:windowInnerWidth>=minifiedOptionsTotalWidthCompact?1.0-(minifiedOptionsTotalWidthIdeal-windowInnerWidth)/(minifiedOptionsTotalWidthIdeal-minifiedOptionsTotalWidthCompact)*(1-15/20):0;// The gap is the space between Options (including a buffer gap at the beginning of the set and at the end )
var minifiedOptionGapWidth=document.getElementById("navbarStringWidth_MinifiedGap").clientWidth;var minifiedOptionsCurrentWidthCompact=minifiedOptionsTotalWidthIdeal*minifiedScaleFactor;// Window Extra Width (Tends to be the last thing the be computed)
var windowExtraWidth=windowInnerWidth>=optionsTotalWidthIdeal?windowInnerWidth-optionsTotalWidthIdeal:windowInnerWidth>=optionsTotalWidthCompact?windowInnerWidth-optionsTotalWidthCompact:windowInnerWidth>=minifiedOptionsTotalWidthIdeal?windowInnerWidth-minifiedOptionsTotalWidthIdeal:windowInnerWidth>=minifiedOptionsTotalWidthCompact?windowInnerWidth-minifiedOptionsCurrentWidthCompact:0;var dropdownBarHeight=optionHeightIdeal*0.1;return{windowInnerWidth:windowInnerWidth,windowExtraWidth:windowExtraWidth,screenHeight:screenHeight,gradientWidth:windowInnerWidth,gradientHeight:gradientHeight,optionWidthIdeal:optionWidthIdeal,optionHeightIdeal:optionHeightIdeal,optionVerticalOffsetIdeal:optionVerticalOffsetIdeal,optionHorizontalShiftIdeal:optionHorizontalShiftIdeal,svgHorizontalOverlapIdeal:svgHorizontalOverlapIdeal,optionsTotalWidthIdeal:optionsTotalWidthIdeal,dropdownBarHeight:dropdownBarHeight,minifiedScaleFactor:minifiedScaleFactor,minifiedOptionGapWidth:minifiedOptionGapWidth,minifiedOptionsCurrentWidthCompact:minifiedOptionsCurrentWidthCompact};});}}// This evaluates the options in this.props.optionsList to determine
// 1)the compact navbar width (.compactWidth)
},{key:"determineWidestWidthOfOptionsList",value:function determineWidestWidthOfOptionsList(){var numOptions=this.props.optionsList.length;// iteration boundary
var curMaxLength=0;// Determine every option's minimum width
for(var curOption=0;curOption<numOptions;curOption++){var curTitle=document.getElementById("navBarStringWidth_"+this.props.optionsList[curOption].title);var curMaxLengthTitle=Math.ceil(curTitle.clientWidth+1);if(curMaxLengthTitle>curMaxLength){curMaxLength=curMaxLengthTitle;}var numSubtitles=this.props.optionsList[curOption].subtitles.length;// Iterate through subtitles to determine the maximum local length
if(numSubtitles>0){for(var j=0;j<numSubtitles;j++){var curSubtitle=document.getElementById("navBarStringWidth_"+this.props.optionsList[curOption].title+"_"+this.props.optionsList[curOption].subtitles[j]);var curSubtitleLength=Math.ceil(curSubtitle.clientWidth+1);if(curSubtitleLength>curMaxLength){curMaxLength=curSubtitleLength;}}}}//console.log("widestWidth: " + curMaxLength);
return curMaxLength;}// This evaluates the options in this.props.optionsList to determine
// 1)the compact navbar width (.compactWidth)
},{key:"addCompactPropertiesToOptionsList",value:function addCompactPropertiesToOptionsList(){var numOptions=this.props.optionsList.length;// iteration boundary
var totalCompactNavbarWidth=0;// Determine every option's minimum width
for(var curOption=0;curOption<numOptions;curOption++){var curTitle=document.getElementById("navBarStringWidth_"+this.props.optionsList[curOption].title);// This property ".minifiedWidthIdeal" is used in the ideal minified menu (to set the width of the option SVG)
var fontScalar=20/25;this.props.optionsList[curOption].minifiedWidthIdeal=Math.ceil(curTitle.clientWidth*fontScalar+1);var curMaxLength=Math.ceil(curTitle.clientWidth+1)+this.state.c_optionWidthBufferConstant;var numSubtitles=this.props.optionsList[curOption].subtitles.length;var longestString=this.props.optionsList[curOption].title;var isTitle=true;// Iterate through subtitles to determine the maximum local length
if(numSubtitles>0){for(var j=0;j<numSubtitles;j++){var curSubtitle=document.getElementById("navBarStringWidth_"+this.props.optionsList[curOption].title+"_"+this.props.optionsList[curOption].subtitles[j]);var curSubtitleLength=Math.ceil(curSubtitle.clientWidth)+this.state.c_optionWidthBufferConstant;if(curSubtitleLength>curMaxLength){isTitle=false;curMaxLength=curSubtitleLength;longestString=this.props.optionsList[curOption].subtitles[j];}}}// Determine the compact width of the current option
var optionCompactWidth=curMaxLength;// Add the "compactWidth" property to the optionsList
this.props.optionsList[curOption].compactWidth=optionCompactWidth;// Increment the total width of the compact navbar
totalCompactNavbarWidth=this.getOptionsTotalWidthCompact(this.props.optionsList.length);// Log
// console.log(
//   this.props.optionsList[curOption].title +
//     " has compact width of " +
//     optionCompactWidth +
//     " as a result of string " +
//     longestString +
//     (isTitle ? " isUpperCase! " : " isLowerCase! ")
// );
}// console.log(
//   "Options have a total compact width of: " + totalCompactNavbarWidth
// );
return totalCompactNavbarWidth;}},{key:"addMinifiedCompactPropertiesToOptionsList",value:function addMinifiedCompactPropertiesToOptionsList(){var numOptions=this.props.optionsList.length;// iteration boundary
var totalCompactNavbarWidth=0;// Determine every option's minimum width
for(var curOption=0;curOption<numOptions;curOption++){var curTitle=document.getElementById("navBarStringWidth_"+this.props.optionsList[curOption].title);var curMaxLength=Math.ceil(curTitle.clientWidth+1)+this.state.c_optionWidthBufferConstant;var numSubtitles=this.props.optionsList[curOption].subtitles.length;var longestString=this.props.optionsList[curOption].title;var isTitle=true;// Iterate through subtitles to determine the maximum local length
if(numSubtitles>0){for(var j=0;j<numSubtitles;j++){var curSubtitle=document.getElementById("navBarStringWidth_"+this.props.optionsList[curOption].title+"_"+this.props.optionsList[curOption].subtitles[j]);var curSubtitleLength=Math.ceil(curSubtitle.clientWidth)+this.state.c_optionWidthBufferConstant;if(curSubtitleLength>curMaxLength){isTitle=false;curMaxLength=curSubtitleLength;longestString=this.props.optionsList[curOption].subtitles[j];}}}// Determine the compact width of the current option
var optionCompactWidth=curMaxLength;// Add the "compactWidth" property to the optionsList
this.props.optionsList[curOption].compactWidth=optionCompactWidth;// Increment the total width of the compact navbar
totalCompactNavbarWidth=this.getOptionsTotalWidthCompact(this.props.optionsList.length);// Log
// console.log(
//   this.props.optionsList[curOption].title +
//     " has compact width of " +
//     optionCompactWidth +
//     " as a result of string " +
//     longestString +
//     (isTitle ? " isUpperCase! " : " isLowerCase! ")
// );
}// console.log(
//   "Options have a total compact width of: " + totalCompactNavbarWidth
// );
return totalCompactNavbarWidth;}// This gets the sum of the widths up to the index Option
},{key:"getSumOfWidthsCompact",value:function getSumOfWidthsCompact(index){// Get sum of previous compact widths and their SVG shifts
var sumOfPreviousOptionWidthsCompact=0;for(var i=0;i<index;i++){sumOfPreviousOptionWidthsCompact+=this.props.optionsList[i].compactWidth;}return sumOfPreviousOptionWidthsCompact;}// This gets the sum of all of the horizontal shifts made by all SVGs up to and including the index Option
},{key:"getSumOfHorizontalShiftsCompact",value:function getSumOfHorizontalShiftsCompact(index){// Get total overlap offset
var sumOfPreviousSVGHorizontalShifts=0;for(var i=1;i<=index;i++){var optionHorizontalShiftCompact=this.props.optionsList[i].compactWidth-Math.cos(this.state.c_optionRotationAngle/360*2*Math.PI)*this.props.optionsList[i].compactWidth*this.state.c_optionScaleWithdrawn;var svgHorizontalOverlapCompact=optionHorizontalShiftCompact+this.state.c_svgOverlapConstant;sumOfPreviousSVGHorizontalShifts+=svgHorizontalOverlapCompact;}return sumOfPreviousSVGHorizontalShifts;}// This gets the total compact width of all of the options, including their overlap
},{key:"getOptionsTotalWidthCompact",value:function getOptionsTotalWidthCompact(indexIn){// Get sum of previous compact widths and their SVG shifts
var sumOfPreviousOptionWidthsCompact=this.getSumOfWidthsCompact(indexIn);// Get total overlap offset
var sumOfPreviousSVGHorizontalShifts=this.getSumOfHorizontalShiftsCompact(indexIn-1);var svgHorizontalShift=sumOfPreviousOptionWidthsCompact-sumOfPreviousSVGHorizontalShifts;return svgHorizontalShift;}// This is used in the OptionSVG when the menu is compacted
},{key:"getSVGHorizontalShiftCompact",value:function getSVGHorizontalShiftCompact(index){// Get sum of previous compact widths and their SVG shifts
var sumOfPreviousOptionWidthsCompact=this.getSumOfWidthsCompact(index);// Get total overlap offset
var sumOfPreviousSVGHorizontalShifts=this.getSumOfHorizontalShiftsCompact(index);var svgHorizontalShift=this.state.windowExtraWidth/2+sumOfPreviousOptionWidthsCompact-sumOfPreviousSVGHorizontalShifts;return svgHorizontalShift;}// This evaluates the options in this.props.optionsList to determine
// 1)the compact navbar width (.compactWidth)
},{key:"getSumOfOptionTextDivWidths",value:function getSumOfOptionTextDivWidths(){var numOptions=this.props.optionsList.length;// iteration boundary
var sumOfWidths=0;// Determine every option's minimum width
for(var curOption=0;curOption<numOptions;curOption++){var curTitle=document.getElementById("navBarStringWidth_"+this.props.optionsList[curOption].title);sumOfWidths+=Math.ceil(curTitle.clientWidth+1);}return sumOfWidths;}},{key:"getMinifiedIdealOptionTextStartX",value:function getMinifiedIdealOptionTextStartX(index){var gapWidth=this.state.minifiedOptionGapWidth;var fontScalar=20/25;var startX=(index+1)*gapWidth;// Determine every option's minimum width
for(var curOption=0;curOption<index;curOption++){var curTitle=document.getElementById("navBarStringWidth_"+this.props.optionsList[curOption].title);startX+=Math.ceil(curTitle.clientWidth*fontScalar+1);}return startX*this.state.minifiedScaleFactor;}},{key:"getMinifiedScaledOptionTextStartX",value:function getMinifiedScaledOptionTextStartX(index,fontSize){var gapWidth=this.state.minifiedOptionGapWidth;var fontScalar=fontSize/20;var startX=(index+1)*gapWidth;// Determine every option's minimum width
for(var curOption=0;curOption<index;curOption++){var curTitle=document.getElementById("navBarStringWidth_"+this.props.optionsList[curOption].title);startX+=Math.ceil(curTitle.clientWidth*fontScalar*this.state.minifiedScaleFactor+1);}return startX;}// APPROACH
// Render browser navbar
},{key:"render",value:function render(){var _this4=this;return/*#__PURE__*/_react["default"].createElement(_react["default"].Fragment,null,this.props.optionsList.map(function(option){return/*#__PURE__*/_react["default"].createElement("div",{key:Math.random()},/*#__PURE__*/_react["default"].createElement("div",{key:Math.random(),id:"navBarStringWidth_"+option.title,style:{position:"absolute",visibility:"hidden",height:"auto",width:"auto",whiteSpace:"nowrap",fontSize:25,fontFamily:"Optima"}},option.title),option.subtitles.map(function(subtitle){return/*#__PURE__*/_react["default"].createElement("div",{key:Math.random(),id:"navBarStringWidth_"+option.title+"_"+subtitle,style:{position:"absolute",visibility:"hidden",height:"auto",width:"auto",whiteSpace:"nowrap",fontSize:25,fontFamily:"Optima"}},subtitle);}));}),/*#__PURE__*/_react["default"].createElement("div",{id:"navbarStringWidth_MinifiedGap",style:{position:"absolute",visibility:"hidden",height:"auto",width:"auto",whiteSpace:"nowrap",fontSize:25,fontFamily:"Optima"}},"____"),/*#__PURE__*/_react["default"].createElement("div",{id:"navbarStringDimensionsLowerCase",style:{position:"absolute",visibility:"hidden",height:"auto",width:"auto",whiteSpace:"nowrap",fontSize:25,fontFamily:"Optima"}},this.props.longestString),/*#__PURE__*/_react["default"].createElement("div",{id:"navbarStringDimensionsUpperCase",style:{position:"absolute",visibility:"hidden",height:"auto",width:"auto",whiteSpace:"nowrap",fontSize:25,fontFamily:"Optima"}},this.props.longestString.toUpperCase()),/*#__PURE__*/_react["default"].createElement("div",{style:{position:"fixed",top:"0",left:"0",width:"100%"//pointerEvents: "none"
}},/*#__PURE__*/_react["default"].createElement("svg",{x:"0",y:"0",width:"100%",height:this.state.gradientHeight},this.state._isMounted?this.state.windowInnerWidth>=this.state.optionsTotalWidthIdeal?/*#__PURE__*/ // LINEAR GRADIENT FOR IDEAL MENU
_react["default"].createElement(_react["default"].Fragment,null,/*#__PURE__*/_react["default"].createElement("defs",null,/*#__PURE__*/_react["default"].createElement("linearGradient",{id:"navbarGradient"},/*#__PURE__*/_react["default"].createElement("stop",{key:Math.random(),offset:"0%",stopColor:this.state.colorScheme[0]}),_toConsumableArray(Array(this.props.optionsList.length).keys()).map(function(index){return/*#__PURE__*/_react["default"].createElement("stop",{key:Math.random(),offset:(_this4.state.windowExtraWidth/2+(index+0.5)*_this4.state.optionWidthIdeal-index*_this4.state.svgHorizontalOverlapIdeal)/_this4.state.windowInnerWidth*100+"%",stopColor:_this4.state.colorScheme[index+2]});}),/*#__PURE__*/_react["default"].createElement("stop",{key:Math.random(),offset:"100%",stopColor:this.state.colorScheme[this.props.optionsList.length+3]}))),/*#__PURE__*/_react["default"].createElement("rect",{x:"0",y:"0",width:"100%",height:this.state.gradientHeight,fill:"url(#navbarGradient)"})):this.state.windowInnerWidth>=this.state.optionsTotalWidthCompact?/*#__PURE__*/ // LINEAR GRADIENT FOR COMPACTED MENU
_react["default"].createElement(_react["default"].Fragment,null,/*#__PURE__*/_react["default"].createElement("defs",null,/*#__PURE__*/_react["default"].createElement("linearGradient",{id:"navbarGradient"},/*#__PURE__*/_react["default"].createElement("stop",{key:Math.random(),offset:"0%",stopColor:this.state.colorScheme[0]}),_toConsumableArray(Array(this.props.optionsList.length).keys()).map(function(index){return/*#__PURE__*/_react["default"].createElement("stop",{key:Math.random(),offset:(_this4.getSVGHorizontalShiftCompact(index)+_this4.props.optionsList[index].compactWidth/2)/_this4.state.windowInnerWidth*100+"%",stopColor:_this4.state.colorScheme[index+2]});}),/*#__PURE__*/_react["default"].createElement("stop",{key:Math.random(),offset:"100%",stopColor:this.state.colorScheme[this.props.optionsList.length+3]}))),/*#__PURE__*/_react["default"].createElement("rect",{x:"0",y:"0",width:"100%",height:this.state.gradientHeight,fill:"url(#navbarGradient)"})):/*#__PURE__*/ // LINEAR GRADIENT FOR COMPACT SCALED MENU
_react["default"].createElement(_react["default"].Fragment,null,/*#__PURE__*/_react["default"].createElement("defs",null,/*#__PURE__*/_react["default"].createElement("linearGradient",{id:"navbarGradient"},/*#__PURE__*/_react["default"].createElement("stop",{key:Math.random(),offset:"0%",stopColor:this.state.colorScheme[0]}),_toConsumableArray(Array(this.props.optionsList.length).keys()).map(function(index){return/*#__PURE__*/_react["default"].createElement("stop",{key:Math.random(),offset:(_this4.getSVGHorizontalShiftCompact(index)+_this4.props.optionsList[index].compactWidth/2)/_this4.state.windowInnerWidth*100+"%",stopColor:_this4.state.colorScheme[index+2]});}),/*#__PURE__*/_react["default"].createElement("stop",{key:Math.random(),offset:"100%",stopColor:this.state.colorScheme[this.props.optionsList.length+3]}))),/*#__PURE__*/_react["default"].createElement("rect",{x:"0",y:"0",width:"100%",height:this.state.gradientHeight,fill:"url(#navbarGradient)"})):// object is not mounted (don't render anything!)
undefined),this.state.windowInnerWidth>=this.state.optionsTotalWidthIdeal?_toConsumableArray(Array(this.props.optionsList.length).keys()).map(function(index){return/*#__PURE__*/ (// IDEAL OPTIONS
_react["default"].createElement(_OptionSVG["default"],{key:Math.random(),index:index,c_optionRotationAngle:_this4.state.c_optionRotationAngle,c_optionScaleWithdrawn:_this4.state.c_optionScaleWithdrawn,c_optionWidthBufferConstant:_this4.state.c_optionWidthBufferConstant,longestStringHeight:_this4.state.longestStringHeight,windowExtraWidth:_this4.state.windowExtraWidth,gradientHeight:_this4.state.gradientHeight,svgHorizontalShift:_this4.state.windowExtraWidth/2+index*_this4.state.optionWidthIdeal-index*_this4.state.svgHorizontalOverlapIdeal,optionWidth:_this4.state.optionWidthIdeal,optionWidthIdeal:_this4.state.optionWidthIdeal,optionHeightIdeal:_this4.state.optionHeightIdeal,optionVerticalOffsetIdeal:_this4.state.optionVerticalOffsetIdeal,optionFillColor:_this4.state.colorScheme[index+2],dropdownBarHeight:_this4.state.dropdownBarHeight,optionsListItem:_this4.props.optionsList[index]}));}):this.state.windowInnerWidth>=this.state.optionsTotalWidthCompact?_toConsumableArray(Array(this.props.optionsList.length).keys()).map(function(index){// COMPACT OPTIONS
// console.log(
//   "optionWidth=" + this.props.optionsList[index].compactWidth
// );
return/*#__PURE__*/_react["default"].createElement(_OptionSVG["default"],{key:Math.random(),index:index,c_optionRotationAngle:_this4.state.c_optionRotationAngle,c_optionScaleWithdrawn:_this4.state.c_optionScaleWithdrawn,c_optionWidthBufferConstant:_this4.state.c_optionWidthBufferConstant,longestStringHeight:_this4.state.longestStringHeight,windowExtraWidth:_this4.state.windowExtraWidth,gradientHeight:_this4.state.gradientHeight,svgHorizontalShift:_this4.getSVGHorizontalShiftCompact(index),optionWidth:_this4.props.optionsList[index].compactWidth,optionWidthIdeal:_this4.state.optionWidthIdeal,optionHeightIdeal:_this4.state.optionHeightIdeal,optionVerticalOffsetIdeal:_this4.state.optionVerticalOffsetIdeal,optionFillColor:_this4.state.colorScheme[index+2],dropdownBarHeight:_this4.state.dropdownBarHeight,optionsListItem:_this4.props.optionsList[index],fontFamily:fonts.proximaNova});}):this.state.windowInnerWidth>=this.state.minifiedOptionsTotalWidthIdeal?_toConsumableArray(Array(this.props.optionsList.length).keys()).map(function(index){// MINIFIED OPTION IDEAL
return/*#__PURE__*/_react["default"].createElement(_MinifiedOption["default"],{key:Math.random(),index:index,windowExtraWidth:_this4.state.windowExtraWidth,minifiedIdealOptionTextStartX:_this4.getMinifiedIdealOptionTextStartX(index),minifiedScaleFactor:_this4.state.minifiedScaleFactor,optionsList:_this4.props.optionsList,gradientHeight:_this4.state.gradientHeight});}):this.state.windowInnerWidth>=this.state.minifiedOptionsTotalWidthCompact?_toConsumableArray(Array(this.props.optionsList.length).keys()).map(function(index){// MINIFIED OPTION SCALING
return/*#__PURE__*/_react["default"].createElement(_MinifiedOption["default"],{key:Math.random(),index:index,windowExtraWidth:_this4.state.windowExtraWidth,minifiedIdealOptionTextStartX:_this4.getMinifiedIdealOptionTextStartX(index),minifiedScaleFactor:_this4.state.minifiedScaleFactor,optionsList:_this4.props.optionsList,gradientHeight:_this4.state.gradientHeight});}):/*#__PURE__*/ // Iconic Option
_react["default"].createElement("svg",{key:Math.random(),style:{display:"inline",position:"absolute",left:this.state.gradientHeight*0.1,top:this.state.gradientHeight*0.1},width:this.state.gradientHeight*0.8,height:this.state.gradientHeight*0.8,x:"0",y:"0"},/*#__PURE__*/_react["default"].createElement("rect",{width:"100%",height:"100%",fill:"white"}),/*#__PURE__*/_react["default"].createElement("rect",_defineProperty({width:"90%",height:"90%",fill:"white",x:"5%",y:"5%"},"fill",this.state.colorScheme[0])),/*#__PURE__*/_react["default"].createElement("line",{x1:"20%",y1:"25%",x2:"80%",y2:"25%",strokeWidth:"5",stroke:"white"}),/*#__PURE__*/_react["default"].createElement("line",{x1:"20%",y1:"50%",x2:"80%",y2:"50%",strokeWidth:"5",stroke:"white"}),/*#__PURE__*/_react["default"].createElement("line",{x1:"20%",y1:"75%",x2:"80%",y2:"75%",strokeWidth:"5",stroke:"white"})),/*#__PURE__*/_react["default"].createElement("svg",{width:"100%",height:"100px",x:"0",y:"0"},/*#__PURE__*/_react["default"].createElement("line",{key:Math.random(),x1:"0",y1:"50",x2:this.state.optionsTotalWidthCompact,y2:"50",stroke:"red",strokeWidth:"5"}),/*#__PURE__*/_react["default"].createElement("line",{key:Math.random(),x1:"0",y1:"60",x2:this.state.minifiedOptionsTotalWidthIdeal,y2:"60",stroke:"orange",strokeWidth:"5"}),/*#__PURE__*/_react["default"].createElement("line",{key:Math.random(),x1:"0",y1:"70",x2:this.state.minifiedOptionsTotalWidthCompact,y2:"70",stroke:"yellow",strokeWidth:"5"}),/*#__PURE__*/_react["default"].createElement("text",{x:this.state.optionsTotalWidthCompact+10,y:"55"},"Navbar Transition (Compact to Minified)"),/*#__PURE__*/_react["default"].createElement("text",{x:this.state.minifiedOptionsTotalWidthIdeal+10,y:"67"},"Minified Navbar Scaling Begin"),/*#__PURE__*/_react["default"].createElement("text",{x:this.state.minifiedOptionsTotalWidthCompact+10,y:"75"},"Minified Navbar Scaling End"))),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("div",{style:{textAlign:"left",maxWidth:"800px"}},/*#__PURE__*/_react["default"].createElement("h1",null,"RESPONSIVE ANIMATED SVG NAVBAR"),/*#__PURE__*/_react["default"].createElement("h4",{style:{color:"red",textDecoration:"underline"}},"DESKTOP BROWSER ONLY"),/*#__PURE__*/_react["default"].createElement("h4",{style:{color:"red",textDecoration:"underline"}},"Be sure to change the screen width to see how the Navbar changes!"),"In addition to a detailed gradient-based color scheme, this Navbar features a smooth animated SVG interface and precision placement of suboptions. In addition, the appearance of the entire Navbar can be modified using the control variables below.",/*#__PURE__*/_react["default"].createElement("h3",null," NAVBAR CONTROL VARIABLES"),"Changing these will modify the appearance of the Navbar:",/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("button",{onClick:function onClick(){_this4.setState(function(prevState){var newColors=null;if(prevState.colorScheme===navBarColorsBlueSchema){newColors=navBarColorsRedSchema;}else{newColors=navBarColorsBlueSchema;}return{colorScheme:newColors};});}},"Change Color Theme"),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("div",null,/*#__PURE__*/_react["default"].createElement("input",{onChange:function onChange(){var value=document.getElementById("optionWidthBuffer").value;_this4.setState({c_optionWidthBufferConstant:Number.parseInt(value)});_this4.onResize();},id:"optionWidthBuffer",defaultValue:this.state.c_optionWidthBufferConstant,type:"range",min:"0",max:"100"}),"Width Text Buffer (px): ",this.state.c_optionWidthBufferConstant),/*#__PURE__*/_react["default"].createElement("div",null,/*#__PURE__*/_react["default"].createElement("input",{onChange:function onChange(){var value=document.getElementById("optionOverlap").value;_this4.setState({c_svgOverlapConstant:Number.parseInt(value)});_this4.onResize();},id:"optionOverlap",type:"range",min:"-100",max:"100"}),"Overlap Amount (px): ",this.state.c_svgOverlapConstant),/*#__PURE__*/_react["default"].createElement("div",null,/*#__PURE__*/_react["default"].createElement("input",{onChange:function onChange(){var value=document.getElementById("optionScale").value/100;_this4.setState({c_optionScaleWithdrawn:Number.parseFloat(value)});_this4.onResize();},defaultValue:this.state.c_optionScaleWithdrawn*100,id:"optionScale",type:"range",min:"1",max:"100"}),"Scale when Withdrawn: ",this.state.c_optionScaleWithdrawn),/*#__PURE__*/_react["default"].createElement("div",null,/*#__PURE__*/_react["default"].createElement("input",{onChange:function onChange(){var value=document.getElementById("optionRotation").value;_this4.setState({c_optionRotationAngle:Number.parseFloat(value)});_this4.onResize();},defaultValue:this.state.c_optionRotationAngle,id:"optionRotation",type:"range",min:"-10",max:"100"}),"Rotation: ",this.state.c_optionRotationAngle),/*#__PURE__*/_react["default"].createElement("br",null),"NOTE: The Navbar is intended to function properly within a certain range of values close to the presupplied values. Large changes to these values can disrupt the appearance of the Navbar (and make it appear buggy)."));}}]);return Browser_NavBar;}(_react["default"].Component);// Aphrodite Stylesheet
exports["default"]=Browser_NavBar;var animations=_aphrodite.StyleSheet.create({optionWithdrawnExpose:{animationName:{from:{transformOrigin:"top right",transform:"rotate(5deg) scale(0.8)"},to:{transformOrigin:"top right",transform:"rotate(0deg) scale(1.0)"}},animationDuration:"0.1s",animationIterationCount:"once",animationTimingFunction:"linear"},optionExposedWidthdraw:{animationName:{from:{transformOrigin:"top right",transform:"rotate(0deg) scale(1.0)"},to:{transformOrigin:"top right",transform:"rotate(5deg) scale(0.8)"}},animationDuration:"0.1s",animationIterationCount:"once",animationTimingFunction:"linear"},optionRotateIn:{animationName:{from:{transform:"rotate(5deg) scale(0.8) skew(5deg,0deg) translate(0px,0px)",fill:"lightblue",height:75,transformOrigin:"bottom right"},to:{transform:"rotate(0deg) scale(1.0) skew(0deg,0deg) translate(50px,50px)",fill:"blue",height:150,transformOrigin:"bottom right"}},animationDuration:"0.1s",animationIterationCount:"once",animationTimingFunction:"linear"},optionRotateOut:{animationName:{from:{transform:"rotate(0deg) scale(1.0) skew(0deg,0deg) translate(50px,50px)",fill:"orange",height:150},to:{transform:"rotate(5deg) scale(0.8) skew(5deg,0deg) translate(0px,0px)",fill:"yellow",height:75}},animationDuration:"0.1s",animationIterationCount:"once",animationTimingFunction:"linear"},rectIncreaseWidth:{animationName:{from:{width:"10%"},to:{width:"40%"}},animationDuration:"0.1s",animationIterationCount:"once",animationTimingFunction:"linear"},rectDecreaseWidth:{animationName:{from:{width:"40%"},to:{width:"10%"}},animationDuration:"0.1s",animationIterationCount:"once",animationTimingFunction:"linear"}});var navBarColors={0:{red:255,green:54,blue:105},1:{red:255,green:54,blue:72},2:{red:255,green:70,blue:54},3:{red:255,green:104,blue:54},4:{red:255,green:138,blue:54},5:{red:255,green:173,blue:54},6:{red:255,green:206,blue:54},7:{red:255,green:239,blue:54},8:{red:202,green:255,blue:54}};var navBarColorsBlueSchema={0:"rgb(54, 255, 195)",1:"rgb(54, 255, 229)",2:"rgb(54, 246, 255)",3:"rgb(54, 213, 255)",4:"rgb(54, 179, 255)",5:"rgb(54, 145, 255)",6:"rgb(54, 111, 255)",7:"rgb(54, 77, 255)",8:"rgb(65, 54, 255)",9:"rgb(99, 54, 255)",10:"rgb(133, 54, 255)",11:"rgb(166, 54, 255)",12:"rgb(200, 54, 255)",13:"rgb(233, 54, 255)",14:"rgb(255, 54, 242)",15:"rgb(255, 54, 209)",16:"rgb(255, 54, 175)",17:"rgb(255, 54, 141)",18:"rgb(255, 54, 107)"};var navBarColorsRedSchema={0:"rgb(255, 54, 137)",1:"rgb(255, 54, 103)",2:"rgb(255, 54, 69)",3:"rgb(255, 72, 54)",4:"rgb(255, 106, 54)",5:"rgb(255, 140, 54)",6:"rgb(255, 174, 54)",7:"rgb(255, 208, 54)",8:"rgb(255, 242, 84)",9:"rgb(233, 255, 54)",10:"rgb(199, 255, 54)",11:"rgb(166, 255, 54)",12:"rgb(133, 255, 54)",13:"rgb(100, 255, 54)",14:"rgb(65, 255, 54)",15:"rgb(54, 255, 76)",16:"rgb(54, 255, 110)",17:"rgb(54, 255, 144)",18:"rgb(54, 254, 178)"};// Font: Proxima Nova
var ProximaNovaRegularFont={fontFamily:"Proxima Nova",fontStyle:"normal",fontWeight:"normal",src:"local('ProximaNova'), local('Proxima-Nova-Regular'), url('src/fonts/ProximaNova/Proxima-Nova-Regular.woff2') format('woff2')"};var OpenSansRegularFont={fontFamily:"Open Sans",fontStyle:"normal",fontWeight:"normal",src:"local('OpenSans'), local('OpenSans-Regular'), url('src/fonts/open-sans/OpenSans-Regular.ttf') format('ttf')"};// Aphrodite Fonts
var fonts=_aphrodite.StyleSheet.create({proximaNova:{fontFamily:[ProximaNovaRegularFont,"sans-serif"]},openSans:{fontFamily:[OpenSansRegularFont,"sans-serif"]}});